<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>增加</value>
  </data>
  <data name="An unexpected error has occurred, please try again." xml:space="preserve">
    <value>系统出错，请重试！</value>
  </data>
  <data name="Answer" xml:space="preserve">
    <value>答案</value>
  </data>
  <data name="Answer Note" xml:space="preserve">
    <value>注: 多个项以|分隔</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="Choice" xml:space="preserve">
    <value>选择题</value>
  </data>
  <data name="Choice Count" xml:space="preserve">
    <value>选择题数量</value>
  </data>
  <data name="Close All Tabs" xml:space="preserve">
    <value>关闭全部选项卡</value>
  </data>
  <data name="Close Other Tabs" xml:space="preserve">
    <value>关闭其他选项卡</value>
  </data>
  <data name="Create Time" xml:space="preserve">
    <value>添加时间</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="Difficulty" xml:space="preserve">
    <value>难度</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="Examination Management" xml:space="preserve">
    <value>考试管理</value>
  </data>
  <data name="Examination Time" xml:space="preserve">
    <value>考试时长</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="Fields Required" xml:space="preserve">
    <value>请完成所有项的输入</value>
  </data>
  <data name="Fill" xml:space="preserve">
    <value>填空题</value>
  </data>
  <data name="Fill Count" xml:space="preserve">
    <value>填空题数量</value>
  </data>
  <data name="Fill Note" xml:space="preserve">
    <value>注：填空题空格用（）表示</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>首页</value>
  </data>
  <data name="Judgment" xml:space="preserve">
    <value>判断题</value>
  </data>
  <data name="Judgment Count" xml:space="preserve">
    <value>判断题数量</value>
  </data>
  <data name="Lock Current Tab" xml:space="preserve">
    <value>定位当前选项卡</value>
  </data>
  <data name="Mannual Add" xml:space="preserve">
    <value>手动添加</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>序号</value>
  </data>
  <data name="Online Examination" xml:space="preserve">
    <value>在线考试</value>
  </data>
  <data name="Option A" xml:space="preserve">
    <value>选项A </value>
  </data>
  <data name="Option B" xml:space="preserve">
    <value>选项B</value>
  </data>
  <data name="Option C" xml:space="preserve">
    <value>选项C</value>
  </data>
  <data name="Option D" xml:space="preserve">
    <value>选项D</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>关闭操作</value>
  </data>
  <data name="Paper" xml:space="preserve">
    <value>试卷</value>
  </data>
  <data name="Paper List" xml:space="preserve">
    <value>试卷列表</value>
  </data>
  <data name="Paper Rules" xml:space="preserve">
    <value>试卷规则</value>
  </data>
  <data name="Please select one record" xml:space="preserve">
    <value>请选择一条记录！</value>
  </data>
  <data name="Q&amp;A" xml:space="preserve">
    <value>问答题</value>
  </data>
  <data name="Q&amp;A Count" xml:space="preserve">
    <value>问答题数量</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>题目</value>
  </data>
  <data name="Question Content" xml:space="preserve">
    <value>题干</value>
  </data>
  <data name="Question List" xml:space="preserve">
    <value>题库</value>
  </data>
  <data name="Questions Management" xml:space="preserve">
    <value>题库管理</value>
  </data>
  <data name="QuestionType" xml:space="preserve">
    <value>题型</value>
  </data>
  <data name="Rule Add" xml:space="preserve">
    <value>根据规则自动添加</value>
  </data>
  <data name="Rule List" xml:space="preserve">
    <value>试卷规则列表</value>
  </data>
  <data name="Score" xml:space="preserve">
    <value>分数</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="Select Rule" xml:space="preserve">
    <value>选择试卷规则</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>课程</value>
  </data>
  <data name="Subject List" xml:space="preserve">
    <value>科目列表</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>提交</value>
  </data>
  <data name="Submit Success" xml:space="preserve">
    <value>提交成功</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>标题</value>
  </data>
  <data name="Update Time" xml:space="preserve">
    <value>更新时间</value>
  </data>
  <data name="User List" xml:space="preserve">
    <value>用户列表</value>
  </data>
  <data name="User Management" xml:space="preserve">
    <value>用户管理</value>
  </data>
</root>