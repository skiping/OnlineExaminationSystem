<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Achievement Management" xml:space="preserve">
    <value>Achievement</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add </value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Age</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="An unexpected error has occurred, please try again." xml:space="preserve">
    <value>An unexpected error has occurred, please try again.</value>
  </data>
  <data name="Answer" xml:space="preserve">
    <value>Answer</value>
  </data>
  <data name="Answer Note" xml:space="preserve">
    <value>Note: multiple items are separated by "|"</value>
  </data>
  <data name="Are you sure you want to submit the test paper?" xml:space="preserve">
    <value>Are you sure you want to submit the test paper?</value>
  </data>
  <data name="Auto Marked" xml:space="preserve">
    <value>Auto Marked</value>
  </data>
  <data name="Average Score" xml:space="preserve">
    <value>Average Score</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Choice" xml:space="preserve">
    <value>Choice</value>
  </data>
  <data name="Choice Count" xml:space="preserve">
    <value>Choice Count</value>
  </data>
  <data name="Close All Tabs" xml:space="preserve">
    <value>Close All Tabs</value>
  </data>
  <data name="Close Other Tabs" xml:space="preserve">
    <value>Close Other Tabs</value>
  </data>
  <data name="Correct" xml:space="preserve">
    <value>Correct</value>
  </data>
  <data name="Correct Answer" xml:space="preserve">
    <value>Correct Answer</value>
  </data>
  <data name="Count Down" xml:space="preserve">
    <value>Count Down</value>
  </data>
  <data name="Create Time" xml:space="preserve">
    <value>Create Time</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Difficulty" xml:space="preserve">
    <value>Difficulty</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit </value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Employee No" xml:space="preserve">
    <value>Employee No</value>
  </data>
  <data name="Exam Complete" xml:space="preserve">
    <value>The examination is over. Your score is</value>
  </data>
  <data name="Exam Complete without Score" xml:space="preserve">
    <value>The examination is over. Please wait for the examiner to correct the test paper</value>
  </data>
  <data name="Examination" xml:space="preserve">
    <value>Examination</value>
  </data>
  <data name="Examination Management" xml:space="preserve">
    <value>Examination</value>
  </data>
  <data name="Examination Time" xml:space="preserve">
    <value>Examination Time</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="Fields Required" xml:space="preserve">
    <value>Please complete all the fields</value>
  </data>
  <data name="Fill" xml:space="preserve">
    <value>Fill</value>
  </data>
  <data name="Fill Count" xml:space="preserve">
    <value>Fill Count</value>
  </data>
  <data name="Fill Note" xml:space="preserve">
    <value>Note: Use () to represent blank</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="Import Questions" xml:space="preserve">
    <value>Import Questions</value>
  </data>
  <data name="Judgment" xml:space="preserve">
    <value>Judgment</value>
  </data>
  <data name="Judgment Count" xml:space="preserve">
    <value>Judgment Count</value>
  </data>
  <data name="Keyword" xml:space="preserve">
    <value>Keyword</value>
  </data>
  <data name="Lock Current Tab" xml:space="preserve">
    <value>Lock Current Tab</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="Mannual Add" xml:space="preserve">
    <value>Mannual Add</value>
  </data>
  <data name="Mark Paper" xml:space="preserve">
    <value>Mark Paper</value>
  </data>
  <data name="Marked" xml:space="preserve">
    <value>Marked</value>
  </data>
  <data name="Marked All" xml:space="preserve">
    <value>Please mark all the questions</value>
  </data>
  <data name="Max Score" xml:space="preserve">
    <value>Max Score</value>
  </data>
  <data name="Min Score" xml:space="preserve">
    <value>Min Score</value>
  </data>
  <data name="MultipleChoice" xml:space="preserve">
    <value>Multiple Choices</value>
  </data>
  <data name="My Examinations" xml:space="preserve">
    <value>My Examinations</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="OJT No" xml:space="preserve">
    <value>OJT No</value>
  </data>
  <data name="OJTNo" xml:space="preserve">
    <value>OJTNo</value>
  </data>
  <data name="Online Examination" xml:space="preserve">
    <value>Online Examination</value>
  </data>
  <data name="Online Examination System" xml:space="preserve">
    <value>Online Examination System</value>
  </data>
  <data name="Option A" xml:space="preserve">
    <value>Option A</value>
  </data>
  <data name="Option B" xml:space="preserve">
    <value>Option B</value>
  </data>
  <data name="Option C" xml:space="preserve">
    <value>Option C</value>
  </data>
  <data name="Option D" xml:space="preserve">
    <value>Option D</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="Paper" xml:space="preserve">
    <value>Paper</value>
  </data>
  <data name="Paper List" xml:space="preserve">
    <value>Paper List</value>
  </data>
  <data name="Paper Rules" xml:space="preserve">
    <value>Paper Rules</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Please select one record" xml:space="preserve">
    <value>Please select one record.</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value> Points</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Print Papger" xml:space="preserve">
    <value>Print Papger</value>
  </data>
  <data name="Production Line" xml:space="preserve">
    <value>Production Line</value>
  </data>
  <data name="Q&amp;A" xml:space="preserve">
    <value>Q&amp;A</value>
  </data>
  <data name="Q&amp;A Count" xml:space="preserve">
    <value>Q&amp;A Count</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="Question Content" xml:space="preserve">
    <value>Question Content</value>
  </data>
  <data name="Question List" xml:space="preserve">
    <value>Question List</value>
  </data>
  <data name="Questions Management" xml:space="preserve">
    <value>Questions</value>
  </data>
  <data name="QuestionType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>Rank</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="Rule Add" xml:space="preserve">
    <value>Automactic Add by Rule</value>
  </data>
  <data name="Rule List" xml:space="preserve">
    <value>Rule List</value>
  </data>
  <data name="Score" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="Score not enough" xml:space="preserve">
    <value>The total score of selected questios is not enough</value>
  </data>
  <data name="Score Section" xml:space="preserve">
    <value>Score Section</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Select File" xml:space="preserve">
    <value>Select File</value>
  </data>
  <data name="Select Questions" xml:space="preserve">
    <value>Select Questions</value>
  </data>
  <data name="Select Rule" xml:space="preserve">
    <value>Select Rule</value>
  </data>
  <data name="Selected Score" xml:space="preserve">
    <value>Selected Total Score</value>
  </data>
  <data name="Sex" xml:space="preserve">
    <value>Sex</value>
  </data>
  <data name="Start the Exam" xml:space="preserve">
    <value>Start the Exam</value>
  </data>
  <data name="Station" xml:space="preserve">
    <value>Station</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="Subject List" xml:space="preserve">
    <value>Subject List</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Submit Success" xml:space="preserve">
    <value>Submit Success</value>
  </data>
  <data name="Teacher" xml:space="preserve">
    <value>Teacher</value>
  </data>
  <data name="Test Nums" xml:space="preserve">
    <value>Test Nums</value>
  </data>
  <data name="Test Time" xml:space="preserve">
    <value>Test Time</value>
  </data>
  <data name="Tested" xml:space="preserve">
    <value>Tested</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Total Score" xml:space="preserve">
    <value>Total Score</value>
  </data>
  <data name="Unmarked" xml:space="preserve">
    <value>Unmarked</value>
  </data>
  <data name="Untested" xml:space="preserve">
    <value>Untested</value>
  </data>
  <data name="Update Time" xml:space="preserve">
    <value>Update Time</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="User Achievement" xml:space="preserve">
    <value>User Achievement</value>
  </data>
  <data name="User Answer" xml:space="preserve">
    <value>User Answer</value>
  </data>
  <data name="User List" xml:space="preserve">
    <value>User List</value>
  </data>
  <data name="User Management" xml:space="preserve">
    <value>User Management</value>
  </data>
  <data name="User Name" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="User name or password invalid" xml:space="preserve">
    <value>User name or password invalid.</value>
  </data>
  <data name="User name or password required" xml:space="preserve">
    <value>User name or password required.</value>
  </data>
  <data name="User Subjects" xml:space="preserve">
    <value>User Subjects</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="Wrong" xml:space="preserve">
    <value>Wrong</value>
  </data>
  <data name="Wrong Rate" xml:space="preserve">
    <value>Wrong Rate</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
</root>